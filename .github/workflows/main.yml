name: Main

on:
  push:
    branches:
      - Main
  workflow_dispatch:

jobs:
  install-dependencies-and-validate:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '18'
      - uses: actions/cache@v2
        id: node-modules
        with:
          path: ./node_modules
          key: node_modules-${{ hashFiles('./yarn.lock') }}
          restore-keys: node_modules-${{ hashFiles('./yarn.lock') }}
      - run: yarn install
      - name: Yarn lint
        run: yarn lint
  release:
    needs: [install-dependencies-and-validate]
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.release.outputs.VERSION }}
    steps:
      - uses: actions/checkout@v2
        with:
          persist-credentials: false
      - uses: actions/setup-node@v2
        with:
          node-version: '18'
          cache: npm
      - name: Semantic Release
        id: semantic-release
        run: |
          npm install --global semantic-release @semantic-release/npm @semantic-release/github @semantic-release/changelog @semantic-release/git @semantic-release/exec
          npx semantic-release
      - name: Output tag
        run: echo ${{ steps.release.outputs.VERSION }}
          
  build:
    needs: [install-dependencies-and-validate, release]
    runs-on: ubuntu-latest
    if: ${{ needs.release.outputs.tag != '' }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '18'
      - uses: actions/cache@v2
        id: node-modules
        with:
          path: ./node_modules
          key: node_modules-${{ hashFiles('./yarn.lock') }}
          restore-keys: node_modules-${{ hashFiles('./yarn.lock') }}
      - name: Yarn build
        run: yarn build
        env:
          NODE_ENV: production
      - uses: actions/cache@v2
        id: next-folder
        with:
          path: .next
          key: next-${{ needs.release.outputs.tag }}
          restore-keys: next-${{ needs.release.outputs.tag }}
      - name: Docker build
        run: docker build -t "andreluizmelo/front-store-app:${{ needs.release.outputs.tag }}"
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'andreluizmelo/front-store-app:${{ needs.release.outputs.tag }}'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'